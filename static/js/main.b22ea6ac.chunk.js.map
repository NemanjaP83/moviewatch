{"version":3,"sources":["serviceWorker.js","components/Header.jsx","context/AppReducer.js","context/GlobalState.js","components/MovieControls.js","components/MovieCard.jsx","components/Watclist.jsx","components/MovieCardResult.jsx","components/Add.jsx","components/Watched.jsx","components/Footer.jsx","components/MovieDetails.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","to","AppReducer","state","actions","type","watchlist","payload","filter","movie","id","watched","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","children","MovieControls","useContext","onClick","MovieCard","src","poster_path","alt","title","Watclist","length","map","MovieCardResult","storedMovie","find","clickedMovie","storedMovieWatched","movieWathed","isMovieAdded","release_date","substring","disabled","console","log","overview","showMore","Add","useState","query","setQuery","results","setResults","name","placeholder","onChange","e","preventDefault","target","url","process","fetch","then","res","json","data","errors","Watched","Footer","href","MovieDetails","url_details","params","setState","genres","setGenres","response","backdrop_path","Object","keys","key","tagline","runtime","vote_average","App","exact","path","component","Watchlist","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b22ea6ac.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"container\">\r\n                <div className=\"inner-content\">\r\n                    <div className=\"brand\">\r\n                        <Link to='/'>WATCHLIST</Link>\r\n                    </div>\r\n                    <ul className=\"nav-links\">\r\n                        <li><Link to='/'>Watchlist</Link></li>\r\n                        <li><Link to='/watched'>Watched</Link></li>\r\n                        <li><Link to='/add' className='btn btn-main'>+ Add</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\r\nexport const AppReducer = (state, actions) => {\r\n    switch (actions.type) {\r\n        case 'ADD_MOVIE_TO_WATCHLIST':\r\n            return {\r\n                ...state,\r\n                watchlist: [actions.payload, ...state.watchlist]\r\n            }\r\n        case 'REMOVE_MOVIE_FROM_WATCHLIST':\r\n            return {\r\n                ...state,\r\n                watchlist: state.watchlist.filter(movie => movie.id !== actions.payload )\r\n            }\r\n        case 'ADD_MOVIE_TO_WATCHED':\r\n            return {\r\n                ...state,\r\n                watchlist: state.watchlist.filter(movie => movie.id !== actions.payload.id),\r\n                watched: [actions.payload, ...state.watched]\r\n            }\r\n        case 'MOVE_TO_WATCHLIST': \r\n            return {\r\n                ...state,\r\n                watched: state.watched.filter(movie => movie.id !== actions.payload.id),\r\n                watchlist: [actions.payload, ...state.watchlist]\r\n            }\r\n        case 'REMOVE_FROM_WATCHED':\r\n            return {\r\n                ...state,\r\n                watched: state.watched.filter(movie => movie.id !== actions.payload),\r\n                // watchlist: [actions.payload, ...state.watchlist]\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext, useReducer, useEffect } from 'react'\r\nimport { AppReducer } from './AppReducer'\r\n\r\n// initial state\r\nconst initialState = {\r\n    watchlist: localStorage.getItem('watchlist') ? JSON.parse(localStorage.getItem('watchlist')) : [],\r\n    watched: localStorage.getItem('watched') ? JSON.parse(localStorage.getItem('watched')) : []\r\n}\r\n\r\n// create context \r\nexport const GlobalContext = createContext(initialState) \r\n\r\n\r\n// create provider\r\nexport const GlobalProvider = props => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('watchlist', JSON.stringify(state.watchlist))\r\n        localStorage.setItem('watched', JSON.stringify(state.watched))\r\n      \r\n    }, [state])\r\n\r\n    // actions\r\n    const addMovieToWatchlist = movie => {\r\n        dispatch({type: 'ADD_MOVIE_TO_WATCHLIST', payload: movie})\r\n    }\r\n\r\n    const removeMovieFromWatchlist = id => {\r\n        dispatch({type: 'REMOVE_MOVIE_FROM_WATCHLIST', payload: id})\r\n    }\r\n\r\n    const addMovieToWatched = movie => {\r\n        dispatch({type: 'ADD_MOVIE_TO_WATCHED', payload: movie})\r\n    }\r\n\r\n    const moveToWatchlist = (movie) => {\r\n        dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\r\n      };\r\n    \r\n      const removeFromWatched = (id) => {\r\n        dispatch({ type: \"REMOVE_FROM_WATCHED\", payload: id });\r\n      };\r\n\r\n    return (\r\n        <GlobalContext.Provider value =\r\n            {{\r\n                watchlist: state.watchlist,\r\n                watched: state.watched,\r\n                addMovieToWatchlist,\r\n                removeMovieFromWatchlist,\r\n                addMovieToWatched,\r\n                moveToWatchlist,\r\n                removeFromWatched\r\n            }}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const MovieControls = ({ type, movie }) => {\r\n  const {\r\n    removeMovieFromWatchlist,\r\n    addMovieToWatched,\r\n    moveToWatchlist,\r\n    removeFromWatched,\r\n  } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"inner-card-controls\">\r\n      {type === \"watchlist\" && (\r\n        <>\r\n          <button className=\"ctrl-btn\" onClick={() => addMovieToWatched(movie)}>\r\n            <i className=\"fa-fw far fa-eye\"></i>\r\n          </button>\r\n\r\n          <button\r\n            className=\"ctrl-btn\"\r\n            onClick={() => removeMovieFromWatchlist(movie.id)}\r\n          >\r\n            <i className=\"fa-fw fa fa-times\"></i>\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {type === \"watched\" && (\r\n        <>\r\n          <button className=\"ctrl-btn\" onClick={() => moveToWatchlist(movie)}>\r\n            <i className=\"fa-fw far fa-eye-slash\"></i>\r\n          </button>\r\n\r\n          <button\r\n            className=\"ctrl-btn\"\r\n            onClick={() => removeFromWatched(movie.id)}\r\n          >\r\n            <i className=\"fa-fw fa fa-times\"></i>\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { MovieControls } from \"./MovieControls\";\r\n\r\nconst MovieCard = ({ movie, type }) => {\r\n  return (\r\n    <div className=\"movie-card\">\r\n      <div className=\"overlay\"></div>\r\n\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n        alt={`${movie.title} Poster`}\r\n      />\r\n\r\n      <MovieControls type={type} movie={movie} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport MovieCard from './MovieCard'\r\n\r\nconst Watclist = () => {\r\n    const { watchlist } = useContext(GlobalContext)\r\n    return (\r\n        <div className='section'>\r\n            <div className=\"movie-page\">\r\n                <div className=\"container\">\r\n                    <div className=\"header\">\r\n                        <h1 className=\"heading\">\r\n                            My Watchlist\r\n                        </h1>\r\n                        <span className=\"count-pill\">\r\n                            {watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"movie-grid\">\r\n                    {watchlist.map((movie) => {\r\n                        return (<MovieCard movie={movie} key={movie.id} type='watchlist'/>)\r\n                    })}\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watclist\r\n\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MovieCardResult = ({ movie }) => {\r\n\r\n    const { addMovieToWatchlist, watchlist, watched } = useContext(GlobalContext)\r\n    const storedMovie = watchlist.find(clickedMovie => clickedMovie.id === movie.id)\r\n    const storedMovieWatched = watched.find( movieWathed => movieWathed.id === movie.id)\r\n    const isMovieAdded = storedMovie ? true : storedMovieWatched ? true : false\r\n    \r\n    const showMore = (movie) => {\r\n        console.log(movie.overview);\r\n    }\r\n\r\n    return (\r\n        <div id='card'>\r\n            <div className=\"reuslt-card\">\r\n                <div className=\"poster-wrapper\">\r\n                {movie.poster_path ? (\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n                        alt={`${movie.title} - Poster`}\r\n                    />\r\n                    ) : (\r\n                        <div className=\"filler-poster\"><span>{movie.title}</span><br/><br/> NO POSTER</div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                    <div className=\"header\">\r\n                        <h3 className=\"title\">{movie.title}</h3>\r\n                        <h4 className=\"release-date\">\r\n                            Release year - {movie.release_date ? movie.release_date.substring(0, 4) : '-'}\r\n                    </h4>\r\n                    {/* <h4>Rating: { movie.vote_average }</h4> */}\r\n                    </div>\r\n\r\n                <div className=\"controls\">\r\n                    <button disabled={isMovieAdded} className=\"btn\" onClick={() => addMovieToWatchlist(movie)}>Add to watchlist</button>\r\n                    <Link to={`moviedetails/${movie.id}`}><button className=\"btn btn-info\" onClick={() => showMore(movie)}>More</button></Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCardResult\r\n","import React, { useState } from 'react'\r\nimport MovieCardResult from '../components/MovieCardResult'\r\n\r\nconst Add = () => {\r\n\r\n    const [query, setQuery] = useState('')\r\n    const [results, setResults] = useState([]);\r\n\r\n    const getMovie = (e) => {\r\n        e.preventDefault()\r\n        setQuery(e.target.value)\r\n\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${e.target.value}&page=1&include_adult=false`;\r\n\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (!data.errors) {\r\n                    setResults(data.results)\r\n                } else {\r\n                    setResults([])\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-page section\">\r\n            <div className=\"container\">\r\n                <div className=\"add-content\">\r\n                    <div className=\"input-wrapper\">\r\n                        <input type=\"text\"\r\n                            value={query}\r\n                            name=\"search\"\r\n                            id=\"movie\"\r\n                            placeholder='Search for a movie'\r\n                            onChange={getMovie}\r\n                        />\r\n                    </div>\r\n\r\n                    {results.length > 0 && (\r\n                        <ul className=\"results\">\r\n                            {results.map((movie) => (\r\n                            <li key={movie.id}>\r\n                                <MovieCardResult movie={movie} />\r\n                            </li>\r\n                            ))}\r\n                        </ul>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst Watched = () => {\r\n  const { watched } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"movie-page section\">\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <h1 className=\"heading\">Watched Movies</h1>\r\n\r\n          <span className=\"count-pill\">\r\n            {watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}\r\n          </span>\r\n        </div>\r\n\r\n        {watched.length > 0 ? (\r\n          <div className=\"movie-grid\">\r\n            {watched.map((movie) => (\r\n                <MovieCard movie={movie} key={movie.id} type=\"watched\" />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"no-movies\">No movies in your list!</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watched","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className='footer'>\r\n            <p>&copy; Moviewatch 2020, <a href=\"https://github.com/NemanjaP83\" target='blank'>coded by NemanjaP83 <i className='fab fa-github'></i></a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nconst MovieDetails = ({ match }) => {\r\n    \r\n    const url_details = `https://api.themoviedb.org/3/movie/${match.params.id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n\r\n    const [state, setState] = useState([])\r\n    const [genres, setGenres] = useState({})\r\n\r\n    useEffect(() => {\r\n        fetch(url_details)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setState(data)\r\n                console.log(data);\r\n                setGenres(data.genres)\r\n            })  \r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"movie-overview\">\r\n            {state.backdrop_path ? \r\n                <div>\r\n                    <img\r\n                    src={`https://image.tmdb.org/t/p/original${state.backdrop_path}`}\r\n                    alt={`${state.title} - Poster`}\r\n                />\r\n                </div>       \r\n                :\r\n                <div className='background'></div>\r\n            }\r\n            <div className='movie-overlay'>\r\n                <div className=\"more-info\">\r\n                    <h2><i className=\"fas fa-film\"></i> Overview</h2>\r\n                {Object.keys(genres).map((key, value) => {\r\n                    return (\r\n                        <div key={key} className='genre'>\r\n                            <span className='genre-title'><i className=\"fas fa-circle\"></i>{ genres[key].name }</span>\r\n                        </div>\r\n                        )\r\n                    })}\r\n                    <h2 className='info-purple'>{state.title}</h2>\r\n                    <h4>{ state.tagline }</h4>\r\n                    <p>{state.overview}</p>\r\n                    <span className=''><i className=\"fas fa-clock\"></i>Duration: { state.runtime } min</span>\r\n                    <span className=''><i className=\"fas fa-star\"></i>Rating: { state.vote_average }</span>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n// components\nimport Header from '../src/components/Header';\nimport Watchlist from '../src/components/Watclist';\nimport Add from '../src/components/Add';\nimport Watched from '../src/components/Watched';\nimport Footer from './components/Footer';\nimport MovieDetails from './components/MovieDetails';\n// fontawesome\nimport './lib/font-awesome/css/all.min.css';\n// Provider\nimport { GlobalProvider } from './context/GlobalState'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalProvider>\n      <Router>\n        <Header />\n          <Switch>\n            <Route exact path='/' component={ Watchlist }/>\n            <Route path='/add' component={ Add } />\n            <Route path='/watched' component={ Watched } />\n            <Route path='/moviedetails/:id' component={ MovieDetails }/>\n          </Switch>\n      <Footer />\n      </Router>\n    </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport * as serviceWorker from \"./serviceWorker\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}